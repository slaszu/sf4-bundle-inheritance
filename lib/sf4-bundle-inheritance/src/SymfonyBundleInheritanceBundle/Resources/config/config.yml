services:
    _defaults:
        autowire: true
        autoconfigure: true

    SymfonyBundleInheritanceBundle\:
        resource: '../../*'
        exclude: '../../{DependencyInjection,Entity,Tests,SymfonyBundleInheritanceBundle.php}'


    # util:
    SymfonyBundleInheritanceBundle\Util\ParentChild\CollectionFactory: {}

    SymfonyBundleInheritanceBundle\Util\ParentChild\Collection:
        factory: [ '@SymfonyBundleInheritanceBundle\Util\ParentChild\CollectionFactory','getCollection' ]

    # controller: override controller resolver
    SymfonyBundleInheritanceBundle\ControllerInheritance\ControllerResolver:
        decorates: 'controller_resolver'
        calls:
            - [ 'initInheritance', [ '@SymfonyBundleInheritanceBundle\Util\ParentChild\Collection' ] ]

    SymfonyBundleInheritanceBundle\Command\ControllerAsServiceDecoratorCreateCommand:
        arguments:
            $container: '@service_container'
        tags:
            - { name: console.command, command: 'symfony-inheritance:controller-as-service'}

    # template: add twig loader at top of loaders chain
    SymfonyBundleInheritanceBundle\TemplateInheritance\TwigLoader:
        arguments:
            $rootPath: '%kernel.project_dir%'
        calls:
            - [ 'initInheritance' , [ '@SymfonyBundleInheritanceBundle\Util\ParentChild\Collection' ] ]
        tags:
            - { name: twig.loader, priority: 1000 }